// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sample.proto

package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Element struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Status               uint32   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            string   `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Element) Reset()         { *m = Element{} }
func (m *Element) String() string { return proto.CompactTextString(m) }
func (*Element) ProtoMessage()    {}
func (*Element) Descriptor() ([]byte, []int) {
	return fileDescriptor_sample_97c2763647df0444, []int{0}
}
func (m *Element) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Element.Unmarshal(m, b)
}
func (m *Element) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Element.Marshal(b, m, deterministic)
}
func (dst *Element) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Element.Merge(dst, src)
}
func (m *Element) XXX_Size() int {
	return xxx_messageInfo_Element.Size(m)
}
func (m *Element) XXX_DiscardUnknown() {
	xxx_messageInfo_Element.DiscardUnknown(m)
}

var xxx_messageInfo_Element proto.InternalMessageInfo

func (m *Element) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Element) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Element) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Element) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Element) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Element) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type Elements struct {
	Elements             []*Element `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Elements) Reset()         { *m = Elements{} }
func (m *Elements) String() string { return proto.CompactTextString(m) }
func (*Elements) ProtoMessage()    {}
func (*Elements) Descriptor() ([]byte, []int) {
	return fileDescriptor_sample_97c2763647df0444, []int{1}
}
func (m *Elements) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Elements.Unmarshal(m, b)
}
func (m *Elements) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Elements.Marshal(b, m, deterministic)
}
func (dst *Elements) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Elements.Merge(dst, src)
}
func (m *Elements) XXX_Size() int {
	return xxx_messageInfo_Elements.Size(m)
}
func (m *Elements) XXX_DiscardUnknown() {
	xxx_messageInfo_Elements.DiscardUnknown(m)
}

var xxx_messageInfo_Elements proto.InternalMessageInfo

func (m *Elements) GetElements() []*Element {
	if m != nil {
		return m.Elements
	}
	return nil
}

type ElementFilter struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Age                  string   `protobuf:"bytes,3,opt,name=age,proto3" json:"age,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            string   `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElementFilter) Reset()         { *m = ElementFilter{} }
func (m *ElementFilter) String() string { return proto.CompactTextString(m) }
func (*ElementFilter) ProtoMessage()    {}
func (*ElementFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_sample_97c2763647df0444, []int{2}
}
func (m *ElementFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementFilter.Unmarshal(m, b)
}
func (m *ElementFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementFilter.Marshal(b, m, deterministic)
}
func (dst *ElementFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementFilter.Merge(dst, src)
}
func (m *ElementFilter) XXX_Size() int {
	return xxx_messageInfo_ElementFilter.Size(m)
}
func (m *ElementFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ElementFilter proto.InternalMessageInfo

func (m *ElementFilter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ElementFilter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ElementFilter) GetAge() string {
	if m != nil {
		return m.Age
	}
	return ""
}

func (m *ElementFilter) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ElementFilter) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *ElementFilter) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func init() {
	proto.RegisterType((*Element)(nil), "example.Element")
	proto.RegisterType((*Elements)(nil), "example.Elements")
	proto.RegisterType((*ElementFilter)(nil), "example.ElementFilter")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ElementServiceClient is the client API for ElementService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ElementServiceClient interface {
	PersistElement(ctx context.Context, in *Element, opts ...grpc.CallOption) (*Element, error)
	ListElement(ctx context.Context, in *ElementFilter, opts ...grpc.CallOption) (*Elements, error)
}

type elementServiceClient struct {
	cc *grpc.ClientConn
}

func NewElementServiceClient(cc *grpc.ClientConn) ElementServiceClient {
	return &elementServiceClient{cc}
}

func (c *elementServiceClient) PersistElement(ctx context.Context, in *Element, opts ...grpc.CallOption) (*Element, error) {
	out := new(Element)
	err := c.cc.Invoke(ctx, "/example.ElementService/PersistElement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *elementServiceClient) ListElement(ctx context.Context, in *ElementFilter, opts ...grpc.CallOption) (*Elements, error) {
	out := new(Elements)
	err := c.cc.Invoke(ctx, "/example.ElementService/ListElement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ElementServiceServer is the server API for ElementService service.
type ElementServiceServer interface {
	PersistElement(context.Context, *Element) (*Element, error)
	ListElement(context.Context, *ElementFilter) (*Elements, error)
}

func RegisterElementServiceServer(s *grpc.Server, srv ElementServiceServer) {
	s.RegisterService(&_ElementService_serviceDesc, srv)
}

func _ElementService_PersistElement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Element)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElementServiceServer).PersistElement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.ElementService/PersistElement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElementServiceServer).PersistElement(ctx, req.(*Element))
	}
	return interceptor(ctx, in, info, handler)
}

func _ElementService_ListElement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ElementFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElementServiceServer).ListElement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.ElementService/ListElement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElementServiceServer).ListElement(ctx, req.(*ElementFilter))
	}
	return interceptor(ctx, in, info, handler)
}

var _ElementService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.ElementService",
	HandlerType: (*ElementServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PersistElement",
			Handler:    _ElementService_PersistElement_Handler,
		},
		{
			MethodName: "ListElement",
			Handler:    _ElementService_ListElement_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sample.proto",
}

func init() { proto.RegisterFile("sample.proto", fileDescriptor_sample_97c2763647df0444) }

var fileDescriptor_sample_97c2763647df0444 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0xb3, 0xe5, 0x6f, 0x07, 0x21, 0xb8, 0x07, 0xa8, 0x04, 0x63, 0xd3, 0x53, 0x63, 0x4c,
	0xab, 0x78, 0x31, 0xde, 0x24, 0xd1, 0x93, 0x07, 0x52, 0x4e, 0x1e, 0x57, 0x3a, 0x21, 0x9b, 0xb4,
	0xdd, 0xa6, 0x3b, 0x10, 0xcf, 0xbe, 0x02, 0x27, 0xdf, 0xc6, 0x77, 0xf0, 0x15, 0x7c, 0x10, 0x43,
	0x59, 0xd0, 0x80, 0x17, 0x13, 0x6f, 0xb3, 0xbf, 0x99, 0xf9, 0x32, 0xdf, 0xec, 0xc0, 0x91, 0x16,
	0x69, 0x9e, 0x60, 0x90, 0x17, 0x8a, 0x14, 0x6f, 0xe0, 0x4b, 0xf9, 0x1c, 0x0c, 0xe7, 0x4a, 0xcd,
	0x13, 0x0c, 0x45, 0x2e, 0x43, 0x91, 0x65, 0x8a, 0x04, 0x49, 0x95, 0xe9, 0x4d, 0x99, 0xb7, 0x62,
	0xd0, 0xb8, 0x4f, 0x30, 0xc5, 0x8c, 0x78, 0x07, 0x2c, 0x19, 0x3b, 0xcc, 0x65, 0xbe, 0x1d, 0x59,
	0x32, 0xe6, 0x1c, 0xaa, 0x99, 0x48, 0xd1, 0xb1, 0x4a, 0x52, 0xc6, 0xbc, 0x0b, 0x15, 0x31, 0x47,
	0xa7, 0xe2, 0x32, 0xbf, 0x16, 0xad, 0x43, 0xde, 0x83, 0xba, 0x26, 0x41, 0x0b, 0xed, 0x54, 0x5d,
	0xe6, 0xb7, 0x23, 0xf3, 0xe2, 0x43, 0xb0, 0x67, 0x05, 0x0a, 0xc2, 0xf8, 0x8e, 0x9c, 0x5a, 0x29,
	0xf1, 0x0d, 0xd6, 0xd9, 0x45, 0x1e, 0x9b, 0x6c, 0x7d, 0x93, 0xdd, 0x01, 0xef, 0x06, 0x9a, 0x66,
	0x28, 0xcd, 0x2f, 0xa0, 0x89, 0x26, 0x76, 0x98, 0x5b, 0xf1, 0x5b, 0xa3, 0x6e, 0x60, 0xbc, 0x05,
	0xa6, 0x28, 0xda, 0x55, 0x78, 0x6f, 0x0c, 0xda, 0x86, 0x3e, 0xc8, 0x84, 0xb0, 0xf8, 0xab, 0x2b,
	0xfb, 0x37, 0x57, 0xf6, 0x7f, 0xb8, 0x1a, 0xbd, 0x33, 0xe8, 0x98, 0xd9, 0xa6, 0x58, 0x2c, 0xe5,
	0x0c, 0xf9, 0x14, 0x3a, 0x13, 0x2c, 0xb4, 0xd4, 0xb4, 0xfd, 0x84, 0x03, 0x73, 0x83, 0x03, 0xe2,
	0x9d, 0xbe, 0x7e, 0x7c, 0xae, 0xac, 0xbe, 0xc7, 0xc3, 0x02, 0x35, 0x85, 0xcb, 0xab, 0xe0, 0x32,
	0x34, 0x1b, 0xb8, 0x65, 0xe7, 0xfc, 0x09, 0x5a, 0x8f, 0x3f, 0x14, 0x7b, 0xfb, 0xfd, 0x9b, 0xc5,
	0x0c, 0x8e, 0xf7, 0xb9, 0xf6, 0xce, 0x4a, 0xe1, 0x13, 0xde, 0x3f, 0x14, 0x0e, 0x13, 0xa9, 0x69,
	0x3c, 0x84, 0xd6, 0x4c, 0xa5, 0xdb, 0xc6, 0xf1, 0x76, 0xd5, 0x93, 0xf5, 0x2d, 0xe9, 0xe7, 0x7a,
	0x79, 0x53, 0xd7, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x34, 0xa9, 0x3e, 0xa6, 0x8a, 0x02, 0x00,
	0x00,
}
